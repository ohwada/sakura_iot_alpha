[{"id":"796539d2.595718","type":"websocket in","z":"1775f3ea.a0672c","name":"sakura","server":"405f46dd.a171f8","client":"","x":72.5,"y":59,"wires":[["bc3e924.148f37","9fc57358.f9768"]]},{"id":"bc3e924.148f37","type":"function","z":"1775f3ea.a0672c","name":"parser","func":"// parse the received data in WebSocket node, and convert to csv format\n// 2016-10-10 K.OHWADA\nvar obj = JSON.parse(msg.payload);\nif (obj.type == \"channels\") { \n    var datetime = obj.datetime;\n    var channels = obj.payload.channels;\n    var len = channels.length;\n        var temp = 0;\n    var humi = 0;\n    var count = 0;\n    for (i=0; i<len; i++) {\n        var ch = channels[len - i - 1];\n        var num = ch.channel;\n        if ( num == 0 ) {\n                temp = ch.value;\n        } else if ( num == 1 ) {\n                humi = ch.value;\n         } else if ( num == 2 ) {\n                count = ch.value;\n            }               \n    }\n        text = datetime + \",\";\n    text += temp + \",\";\n    text += humi + \",\";\n    text += count;\n    return { \"payload\": text };\n}\nreturn null;\n","outputs":1,"noerr":0,"x":241.5,"y":60,"wires":[["f64788ce.09c068","22f4d5c9.9c152a"]]},{"id":"a9f1b24d.0d1a6","type":"file in","z":"1775f3ea.a0672c","name":"","filename":"sensor.txt","format":"utf8","x":272.5,"y":163.00000381469727,"wires":[["c2da440a.5adbc8"]]},{"id":"ea637005.8fb8c","type":"http in","z":"1775f3ea.a0672c","name":"","url":"/text","method":"get","swaggerDoc":"","x":82.5,"y":162,"wires":[["a9f1b24d.0d1a6"]]},{"id":"a8000ace.985618","type":"http response","z":"1775f3ea.a0672c","name":"","x":579.5,"y":161,"wires":[]},{"id":"c2da440a.5adbc8","type":"function","z":"1775f3ea.a0672c","name":"text","func":"// sort in reverse order, from new data to old data\n// 2016-10-10 K.OHWADA\nvar payload = msg.payload;\nvar lines = payload.split(\"\\n\");\nvar len = lines.length;\nvar text = \"\";\nfor (var i=0; i<Math.min((len-1), 40); i++) {\n    text += lines[len - i -2] + \"<br/>\\n\";\n}\nmsg.payload = text;\nreturn msg;\n","outputs":1,"noerr":0,"x":413.5,"y":162,"wires":[["a8000ace.985618"]]},{"id":"f64788ce.09c068","type":"file","z":"1775f3ea.a0672c","name":"","filename":"sensor.txt","appendNewline":true,"createDir":false,"overwriteFile":"false","x":444.5,"y":60,"wires":[]},{"id":"22f4d5c9.9c152a","type":"debug","z":"1775f3ea.a0672c","name":"","active":false,"console":"false","complete":"false","x":453.49998474121094,"y":104.99999618530273,"wires":[]},{"id":"9fc57358.f9768","type":"debug","z":"1775f3ea.a0672c","name":"","active":false,"console":"false","complete":"false","x":241.5,"y":105.99999618530273,"wires":[]},{"id":"d81962bf.80e31","type":"chart request","z":"1775f3ea.a0672c","charttype":"LineChart","path":"/temperature","refresh":"60","formatx":"","formaty":"","attribs":[{"name":"datetime","type":"date"},{"name":"temperature","type":"number"}],"x":104.5,"y":224,"wires":[["68000576.f2898c"]]},{"id":"39887c00.5275d4","type":"chart response","z":"1775f3ea.a0672c","x":606.5,"y":223,"wires":[]},{"id":"cd2426d5.85adb8","type":"function","z":"1775f3ea.a0672c","name":"temperature","func":"// select the latest 100 of data, and convert the graph format\n// 2016-10-10 K.OHWADA\nvar payload = msg.payload;\nvar lines = payload.split(\"\\n\");\nvar len = lines.length;\nvar start = len - 100;\nif (start<0) {\n    start = 0;\n}   \nvar text = [];\nfor (var i=start; i<(len-1); i++) {\n    var line = lines[i];\n    var cols = line.split(\",\");\n    var obj = {};\n    obj.datetime = new Date(cols[0]);\n    obj.temperature = parseFloat(cols[1]);\n//  obj.humidity = parseFloat(cols[2]);\n//  obj.count = parseInt(cols[3]);  \n    text.push(obj);\n}\nmsg.payload = text;\nreturn msg;","outputs":1,"noerr":0,"x":441.5,"y":224,"wires":[["39887c00.5275d4","ed7d6062.66cd2"]]},{"id":"68000576.f2898c","type":"file in","z":"1775f3ea.a0672c","name":"","filename":"sensor.txt","format":"utf8","x":273,"y":224,"wires":[["cd2426d5.85adb8"]]},{"id":"ed7d6062.66cd2","type":"debug","z":"1775f3ea.a0672c","name":"","active":false,"console":"false","complete":"false","x":601.5,"y":281,"wires":[]},{"id":"a07228b6.636f58","type":"chart request","z":"1775f3ea.a0672c","charttype":"LineChart","path":"/humidity","refresh":"60","formatx":"","formaty":"","attribs":[{"name":"datetime","type":"date"},{"name":"humidity","type":"number"}],"x":103,"y":344,"wires":[["196c7d47.e55303"]]},{"id":"d7940dad.2cbf4","type":"chart response","z":"1775f3ea.a0672c","x":605,"y":343,"wires":[]},{"id":"8401bf1a.f438c","type":"function","z":"1775f3ea.a0672c","name":"humidity","func":"// select the latest 100 of data, and convert the graph format\n// 2016-10-10 K.OHWADA\nvar payload = msg.payload;\nvar lines = payload.split(\"\\n\");\nvar len = lines.length;\nvar start = len - 100;\nif (start<0) {\n    start = 0;\n}   \nvar text = [];\nfor (var i=start; i<(len-1); i++) {\n    var line = lines[i];\n    var cols = line.split(\",\");\n    var obj = {};\n    obj.datetime = new Date(cols[0]);\n//    obj.temperature = parseFloat(cols[1]);\n  obj.humidity = parseFloat(cols[2]);\n//  obj.count = parseInt(cols[3]);  \n    text.push(obj);\n}\nmsg.payload = text;\nreturn msg;","outputs":1,"noerr":0,"x":430,"y":344,"wires":[["d7940dad.2cbf4"]]},{"id":"196c7d47.e55303","type":"file in","z":"1775f3ea.a0672c","name":"","filename":"sensor.txt","format":"utf8","x":271.5,"y":344,"wires":[["8401bf1a.f438c"]]},{"id":"26d65f2c.8507","type":"chart request","z":"1775f3ea.a0672c","charttype":"LineChart","path":"/count","refresh":"60","formatx":"","formaty":"","attribs":[{"name":"datetime","type":"date"},{"name":"count","type":"number"}],"x":102,"y":412,"wires":[["b807996c.a9b968"]]},{"id":"9b4abd45.ff861","type":"chart response","z":"1775f3ea.a0672c","x":611,"y":413,"wires":[]},{"id":"7c2b365.2afadc8","type":"function","z":"1775f3ea.a0672c","name":"count","func":"// select the latest 100 of data, and convert the graph format\n// 2016-10-10 K.OHWADA\nvar payload = msg.payload;\nvar lines = payload.split(\"\\n\");\nvar len = lines.length;\nvar start = len - 100;\nif (start<0) {\n    start = 0;\n}   \nvar text = [];\nfor (var i=start; i<(len-1); i++) {\n    var line = lines[i];\n    var cols = line.split(\",\");\n    var obj = {};\n    obj.datetime = new Date(cols[0]);\n//    obj.temperature = parseFloat(cols[1]);\n//  obj.humidity = parseFloat(cols[2]);\n  obj.count = parseInt(cols[3]);  \n    text.push(obj);\n}\nmsg.payload = text;\nreturn msg;\n","outputs":1,"noerr":0,"x":422,"y":414,"wires":[["9b4abd45.ff861"]]},{"id":"b807996c.a9b968","type":"file in","z":"1775f3ea.a0672c","name":"","filename":"sensor.txt","format":"utf8","x":275.5,"y":413,"wires":[["7c2b365.2afadc8"]]},{"id":"d7cf075c.ad2fc8","type":"comment","z":"1775f3ea.a0672c","name":"Description of the flow","info":"Sakura IoT Platform alpha\n2016-10-10 K.OHWADA\n\nSensor : HDC1000\nInterface : WebSocket\nch0: temperature\nch1: humidity\nch2: count\n","x":127.5,"y":485,"wires":[]},{"id":"405f46dd.a171f8","type":"websocket-listener","z":"1775f3ea.a0672c","path":"wss://secure.sakura.ad.jp/iot-alpha/ws/","wholemsg":"false"}]
